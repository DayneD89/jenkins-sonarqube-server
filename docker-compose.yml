version: '3.6'
services:
  
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ${NGINX_DEFAULT_CONF:-./nginx/default.con}:/etc/nginx/conf.d/default.conf 
      - ./logs/nginx:/var/log/nginx
    restart: always

  jenkins:
    image: jenkins.nginx.docker:lts
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: jenkins
    ports:
      - '2022:22'
      - '50000:50000'
      - '50022:50022'
    volumes:
      - ./jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - UID_JENKINS=${UID_JENKINS:-1000}
      - GID_JENKINS=${GID_JENKINS:-1000}
      - JENKINS_OPTS=${JENKINS_OPTS:-"--prefix=/jenkins"}
    restart: always

  sonarqube:
    image: sonarqube:8-community
    container_name: sonarqube
    depends_on:
      - db
    ports:
      - "9000:9000"
#    environment:
#      SONAR_WEB_CONTEXT: /sonar
#      SONAR_WEB_PORT: 9000
#      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
#      SONAR_JDBC_USERNAME: sonar
#      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - ./sonar/conf/:/opt/sonarqube/conf/
      - ./sonar/data:/opt/sonarqube/data
      - ./sonar/extensions:/opt/sonarqube/extensions
      - ./logs/sonar:/opt/sonarqube/logs
    restart: always

  db:
    image: postgres
    container_name: db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - ./postgresql:/var/lib/postgresql
      - ./postgresql/data:/var/lib/postgresql/data
